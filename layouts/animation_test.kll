# Animation Example Configuration

Name = Animation Example;
Version = 0.1;
Author = "HaaTa (Jacob Alexander) 2017";
KLL = 0.5;

# Modified Date
Date = 2017-01-22;

animation_test_layout => animation_test_layout_define;
animation_test_layout = 1;

### Animations ###

# Pixel index 1 test
A[testanimation] <= ;
A[testanimation, 1] <= P[1](30,70,120);
A[testanimation, 2] <= P[1](0,0,0);
A[testanimation, 3] <= P[1](60,90,140);

# Pixel clear test (scancodes)
A[clear_pixels] <= ;
A[clear_pixels, 1] <=
	S[18](0,0,0),
	S[19](0,0,0),
	S[20](0,0,0),
	S[29](0,0,0),
	S[38](0,0,0);

# Rainbow, static interpolation test
A[rainbow_static_fill_interp] <= pfunc:interp;
A[rainbow_static_fill_interp, 1] <=
	P[c:0%](255,0,0),
	P[c:25%](255,255,0),
	P[c:50%](0,255,0),
	P[c:75%](0,0,255),
	P[c:100%](127,0,255);

# Full fill example
A[blue_fill_interp] <= pfunc:interp;
A[blue_fill_interp, 1] <=
	P[c:0%](0x00,0xAE,0xDA),
	P[c:100%](0x00,0xAE,0xDA);

# Fade-in example
# TODO - Use frame interpolation when ready
A[fade_in] <= pfunc:interp, loops:1, replace:basic;
A[fade_in, 1] <= P[c:0%](0,0,0), P[c:100%](0,0,0);
A[fade_in, 2] <= P[c:0%](5,5,5), P[c:100%](5,5,5);
A[fade_in, 3] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[fade_in, 4] <= P[c:0%](20,20,20), P[c:100%](20,20,20);
A[fade_in, 5] <= P[c:0%](40,40,40), P[c:100%](40,40,40);
A[fade_in, 6] <= P[c:0%](60,60,60), P[c:100%](60,60,60);
A[fade_in, 7] <= P[c:0%](80,80,80), P[c:100%](80,80,80);
A[fade_in, 8] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 9] <= P[c:0%](130,130,130), P[c:100%](130,130,130);
A[fade_in, 10] <= P[c:0%](160,160,160), P[c:100%](160,160,160);
A[fade_in, 11] <= P[c:0%](190,190,190), P[c:100%](190,190,190);
A[fade_in, 12] <= P[c:0%](220,220,220), P[c:100%](220,220,220);
A[fade_in, 13] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
A[fade_in, 14] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 15] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 16] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 17] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[fade_in, 18] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[fade_in, 19] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 20] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 21] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 22] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 23] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 24] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 25] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
A[fade_in, 26] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
A[fade_in, 27] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
#A[fade_in, 22] <= P[c:0%](0,100,0), P[c:25%](100,100,0), P[c:50%](100,0,0), P[c:75%](75,0,100), P[c:100%](0,0,100);
#A[fade_in, 23] <= P[c:0%](0,200,0), P[c:25%](200,200,0), P[c:50%](200,0,0), P[c:75%](120,0,200), P[c:100%](0,0,200);
#A[fade_in, 24] <= P[c:0%](255,0,0), P[c:25%](255,255,0), P[c:50%](0,255,0), P[c:75%](0,0,255), P[c:100%](127,0,255);

# Rainbow Animation example
A[rainbow_fill_interp] <= loop, framestretch, framedelay:1, replace:basic, pfunc:interp;
A[rainbow_fill_interp, 1] <= P[c:0%](255,0,0), P[c:25%](255,255,0), P[c:50%](0,255,0), P[c:75%](0,0,255), P[c:100%](127,0,255);
#A[rainbow_fill_interp, 1] <= P[c:0%](255,0,0), P[c:25%](255,255,0), P[c:50%](0,255,0), P[c:75%](0,0,255);
A[rainbow_fill_interp, 2] <= P[c:0%](255,0,0), P[c:27%](255,255,0), P[c:52%](0,255,0), P[c:77%](0,0,255), P[c:100%](127,0,255);
#A[rainbow_fill_interp, 2] <= P[c:0%](255,0,0), P[c:27%](255,255,0), P[c:52%](0,255,0), P[c:77%](0,0,255);
A[rainbow_fill_interp, 3] <= P[c:0%](255,0,0), P[c:29%](255,255,0), P[c:54%](0,255,0), P[c:79%](0,0,255), P[c:100%](127,0,255);
#A[rainbow_fill_interp, 3] <= P[c:0%](255,0,0), P[c:29%](255,255,0), P[c:54%](0,255,0), P[c:79%](0,0,255);
A[rainbow_fill_interp, 4] <= P[c:0%](255,0,0), P[c:31%](255,255,0), P[c:56%](0,255,0), P[c:81%](0,0,255), P[c:100%](127,0,255);
#A[rainbow_fill_interp, 4] <= P[c:0%](255,0,0), P[c:31%](255,255,0), P[c:56%](0,255,0), P[c:81%](0,0,255);
#A[rainbow_fill_interp, 4] <= P[c:56%](0,255,0), P[c:81%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 5] <= P[c:0%](255,0,0), P[c:33%](255,255,0), P[c:58%](0,255,0), P[c:83%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 6] <= P[c:0%](255,0,0), P[c:35%](255,255,0), P[c:60%](0,255,0), P[c:85%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 7] <= P[c:0%](255,0,0), P[c:37%](255,255,0), P[c:62%](0,255,0), P[c:87%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 8] <= P[c:0%](255,0,0), P[c:39%](255,255,0), P[c:64%](0,255,0), P[c:89%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 9] <= P[c:0%](255,0,0), P[c:41%](255,255,0), P[c:66%](0,255,0), P[c:91%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 10] <= P[c:0%](255,0,0), P[c:43%](255,255,0), P[c:68%](0,255,0), P[c:93%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 11] <= P[c:0%](255,0,0), P[c:45%](255,255,0), P[c:70%](0,255,0), P[c:95%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 12] <= P[c:0%](255,0,0), P[c:47%](255,255,0), P[c:72%](0,255,0), P[c:97%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 13] <= P[c:0%](255,0,0), P[c:45%](255,255,0), P[c:70%](0,255,0), P[c:95%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 14] <= P[c:0%](255,0,0), P[c:43%](255,255,0), P[c:68%](0,255,0), P[c:93%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 15] <= P[c:0%](255,0,0), P[c:41%](255,255,0), P[c:66%](0,255,0), P[c:91%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 16] <= P[c:0%](255,0,0), P[c:39%](255,255,0), P[c:64%](0,255,0), P[c:89%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 17] <= P[c:0%](255,0,0), P[c:37%](255,255,0), P[c:62%](0,255,0), P[c:87%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 18] <= P[c:0%](255,0,0), P[c:35%](255,255,0), P[c:60%](0,255,0), P[c:85%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 19] <= P[c:0%](255,0,0), P[c:33%](255,255,0), P[c:58%](0,255,0), P[c:83%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 20] <= P[c:0%](255,0,0), P[c:31%](255,255,0), P[c:56%](0,255,0), P[c:81%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 21] <= P[c:0%](255,0,0), P[c:29%](255,255,0), P[c:54%](0,255,0), P[c:79%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 22] <= P[c:0%](255,0,0), P[c:27%](255,255,0), P[c:52%](0,255,0), P[c:77%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 23] <= P[c:0%](255,0,0), P[c:25%](255,255,0), P[c:50%](0,255,0), P[c:75%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 24] <= P[c:0%](255,0,0), P[c:23%](255,255,0), P[c:47%](0,255,0), P[c:73%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 25] <= P[c:0%](255,0,0), P[c:21%](255,255,0), P[c:44%](0,255,0), P[c:71%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 26] <= P[c:0%](255,0,0), P[c:19%](255,255,0), P[c:41%](0,255,0), P[c:69%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 27] <= P[c:0%](255,0,0), P[c:17%](255,255,0), P[c:38%](0,255,0), P[c:67%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 28] <= P[c:0%](255,0,0), P[c:15%](255,255,0), P[c:35%](0,255,0), P[c:65%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 29] <= P[c:0%](255,0,0), P[c:13%](255,255,0), P[c:33%](0,255,0), P[c:63%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 30] <= P[c:0%](255,0,0), P[c:11%](255,255,0), P[c:30%](0,255,0), P[c:61%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 31] <= P[c:0%](255,0,0), P[c:9%](255,255,0), P[c:27%](0,255,0), P[c:59%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 32] <= P[c:0%](255,0,0), P[c:7%](255,255,0), P[c:24%](0,255,0), P[c:57%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 33] <= P[c:0%](255,0,0), P[c:5%](255,255,0), P[c:21%](0,255,0), P[c:55%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 34] <= P[c:0%](255,0,0), P[c:3%](255,255,0), P[c:18%](0,255,0), P[c:53%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 35] <= P[c:0%](255,0,0), P[c:3%](255,255,0), P[c:18%](0,255,0), P[c:53%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 36] <= P[c:0%](255,0,0), P[c:3%](255,255,0), P[c:18%](0,255,0), P[c:53%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 37] <= P[c:0%](255,0,0), P[c:10%](255,255,0), P[c:20%](0,255,0), P[c:60%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 38] <= P[c:0%](255,0,0), P[c:20%](255,255,0), P[c:40%](0,255,0), P[c:70%](0,0,255), P[c:100%](127,0,255);
A[rainbow_fill_interp, 39] <= P[c:0%](255,0,0), P[c:25%](255,255,0), P[c:50%](0,255,0), P[c:75%](0,0,255), P[c:100%](127,0,255);
#A[rainbow_fill_interp, 40] <= P[c:0%](100,100,100), P[c:100%](100,100,100);

# Rainbow Top Row
A[rainbow_static_fill_interp_top_row] <= pfunc:interp;
A[rainbow_static_fill_interp_top_row, 1] <= P[c:0%,r:1](255,0,0), P[c:25%,r:1](255,255,0), P[c:50%,r:1](0,255,0), P[c:75%,r:1](0,0,255), P[c:100%,r:1](127,0,255);

# Fade-out example
# TODO - Use frame interpolation when ready
A[fade_out] <= pfunc:interp;
A[fade_out, 16] <= P[c:0%](0,0,0), P[c:100%](0,0,0);
A[fade_out, 15] <= P[c:0%](5,5,5), P[c:100%](5,5,5);
A[fade_out, 14] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[fade_out, 13] <= P[c:0%](20,20,20), P[c:100%](20,20,20);
A[fade_out, 12] <= P[c:0%](40,40,40), P[c:100%](40,40,40);
A[fade_out, 11] <= P[c:0%](60,60,60), P[c:100%](60,60,60);
A[fade_out, 10] <= P[c:0%](80,80,80), P[c:100%](80,80,80);
A[fade_out, 9] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_out, 8] <= P[c:0%](130,130,130), P[c:100%](130,130,130);
A[fade_out, 7] <= P[c:0%](160,160,160), P[c:100%](160,160,160);
A[fade_out, 6] <= P[c:0%](190,190,190), P[c:100%](190,190,190);
A[fade_out, 5] <= P[c:0%](220,220,220), P[c:100%](220,220,220);
A[fade_out, 4] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
A[fade_out, 3] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_out, 2] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[fade_out, 1] <= P[c:0%](100,100,100), P[c:100%](100,100,100);

U"Right" :+ A[relative_add](start);
U"ScrollLock" :+ A[relative_add](start);
U"Insert" :+ A[fade_in](start);

# Relative animation test
A[relative_add] <= replace:basic, loops:2, framedelay:1;
A[relative_add, 1] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 2] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 3] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 4] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 5] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 6] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 7] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 8] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 9] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 10] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 11] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 12] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 13] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 14] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 15] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 16] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 17] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 18] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 19] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 20] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
#A[relative_add, 21] <= P[r:i,c:i](50,50,50);
#A[relative_add, 2] <= P[c:i](+100,+100,+100);
#A[relative_add, 3] <= P[r:i,c:i](+100,+100,+100);

# TODO Move to U"CapsLock" when working
A[caps_lock] <= loop, replace:all;
A[caps_lock, 1] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 2] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 3] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 4] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 5] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 6] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 7] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 5] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 6] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 8] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 9] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 10] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 11] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 12] <= S[0x36](-:20,-:20,-:20);

A[fade, 1] <= P[c:0%](+:1,+:1,+:1), P[c:100%](+:1,+:1,+:1);

A[spot_up] <= loops:30;
A[spot_up, 1] <=
	P[r:i,  c:i  ](+:2,+:2,+:2),
	P[r:i+1,c:i  ](-:1,-:1,-:1),
	P[r:i-1,c:i  ](-:1,-:1,-:1),
	P[r:i,  c:i+1](-:1,-:1,-:1),
	P[r:i,  c:i-1](-:1,-:1,-:1),
	P[r:i+1,c:i+1](-:1,-:1,-:1),
	P[r:i-1,c:i+1](-:1,-:1,-:1),
	P[r:i+1,c:i-1](-:1,-:1,-:1),
	P[r:i-1,c:i-1](-:1,-:1,-:1),
	P[r:i+2,c:i  ](-:1,-:1,-:1),
	P[r:i-2,c:i  ](-:1,-:1,-:1),
	P[r:i,  c:i+2](-:1,-:1,-:1),
	P[r:i,  c:i-2](-:1,-:1,-:1);
#U[0x03-0x52,0xE0-0xE7] :+ A[spot_up];

# TODO Move to U"ScrollLock" when working
A[scroll_lock] <= loop, replace:all;
A[scroll_lock, 1] <= S[0xF](+:50,+:50,+:50);
A[scroll_lock, 2] <= S[0xF](+:50,+:50,+:50);
A[scroll_lock, 3] <= S[0xF](+:50,+:50,+:50);
A[scroll_lock, 4] <= S[0xF](+:50,+:50,+:50);
A[scroll_lock, 5] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 6] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 7] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 5] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 6] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 8] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 9] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 10] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 11] <= S[0xF](-:20,-:20,-:20);
A[scroll_lock, 12] <= S[0xF](-:20,-:20,-:20);


# Lock Keys
A[lock_event] <= loops:1, replace:all, framedelay:1, replace:basic;
A[lock_event, 1] <= P[r:i,c:i](+:100,+:100,+:100);
A[lock_event, 2] <= P[r:i,c:i](+:100,+:100,+:100);
A[lock_event, 3] <= P[r:i,c:i](+:100,+:100,+:100);
A[lock_event, 4] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 5] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 6] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 7] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 8] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 9] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 10] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 11] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 12] <= P[r:i,c:i](+:0,+:0,+:0);
A[lock_event, 13] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 14] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 15] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 16] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 17] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 18] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 19] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 20] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 21] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 22] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 23] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 24] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 25] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 26] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 27] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 28] <= P[r:i,c:i](-:10,-:10,-:10);
A[lock_event, 29] <= P[r:i,c:i](-:10,-:10,-:10);

U"RCtrl" :+ layerLock(1);
U"Menu" :+ layerLock(2);

# Underlighting streak
A[under_streak] <= loops:1, replace:stack;
A[under_streak, 1] <=
	P[102](+:91,+:50,+:86),
	P[103](+:255,+:255,+:255),
	P[104](-:55,-:100,-:100),
	P[105](-:100,-:100,-:100),
	P[106](-:100,-:100,-:100);
A[under_streak, 2] <=
	P[101](+:91,+:50,+:86),
	P[102](+:255,+:255,+:255),
	P[103](-:55,-:100,-:100),
	P[104](-:100,-:100,-:100),
	P[105](-:100,-:100,-:100);
A[under_streak, 3] <=
	P[100](+:91,+:50,+:86),
	P[101](+:255,+:255,+:255),
	P[102](-:55,-:100,-:100),
	P[103](-:100,-:100,-:100),
	P[104](-:100,-:100,-:100);
A[under_streak, 4] <=
	P[99](+:91,+:50,+:86),
	P[100](+:255,+:255,+:255),
	P[101](-:55,-:100,-:100),
	P[102](-:100,-:100,-:100),
	P[103](-:100,-:100,-:100);
A[under_streak, 5] <=
	P[98](+:91,+:50,+:86),
	P[99](+:255,+:255,+:255),
	P[100](-:55,-:100,-:100),
	P[101](-:100,-:100,-:100),
	P[102](-:100,-:100,-:100);
A[under_streak, 6] <=
	P[97](+:91,+:50,+:86),
	P[98](+:255,+:255,+:255),
	P[99](-:55,-:100,-:100),
	P[100](-:100,-:100,-:100),
	P[101](-:100,-:100,-:100);
A[under_streak, 7] <=
	P[128](+:91,+:50,+:86),
	P[97](+:255,+:255,+:255),
	P[98](-:55,-:100,-:100),
	P[99](-:100,-:100,-:100),
	P[100](-:100,-:100,-:100);
A[under_streak, 8] <=
	P[127](+:91,+:50,+:86),
	P[128](+:255,+:255,+:255),
	P[97](-:55,-:100,-:100),
	P[98](-:100,-:100,-:100),
	P[99](-:100,-:100,-:100);
A[under_streak, 9] <=
	P[126](+:91,+:50,+:86),
	P[127](+:255,+:255,+:255),
	P[128](-:55,-:100,-:100),
	P[97](-:100,-:100,-:100),
	P[98](-:100,-:100,-:100);
A[under_streak, 10] <=
	P[125](+:91,+:50,+:86),
	P[126](+:255,+:255,+:255),
	P[127](-:55,-:100,-:100),
	P[128](-:100,-:100,-:100),
	P[97](-:100,-:100,-:100);
A[under_streak, 11] <=
	P[124](+:91,+:50,+:86),
	P[125](+:255,+:255,+:255),
	P[126](-:55,-:100,-:100),
	P[127](-:100,-:100,-:100),
	P[128](-:100,-:100,-:100);
A[under_streak, 12] <=
	P[123](+:91,+:50,+:86),
	P[124](+:255,+:255,+:255),
	P[125](-:55,-:100,-:100),
	P[126](-:100,-:100,-:100),
	P[127](-:100,-:100,-:100);
A[under_streak, 13] <=
	P[122](+:91,+:50,+:86),
	P[123](+:255,+:255,+:255),
	P[124](-:55,-:100,-:100),
	P[125](-:100,-:100,-:100),
	P[126](-:100,-:100,-:100);
A[under_streak, 14] <=
	P[121](+:91,+:50,+:86),
	P[122](+:255,+:255,+:255),
	P[123](-:55,-:100,-:100),
	P[124](-:100,-:100,-:100),
	P[125](-:100,-:100,-:100);
A[under_streak, 15] <=
	P[120](+:91,+:50,+:86),
	P[121](+:255,+:255,+:255),
	P[122](-:55,-:100,-:100),
	P[123](-:100,-:100,-:100),
	P[124](-:100,-:100,-:100);
A[under_streak, 16] <=
	P[119](+:91,+:50,+:86),
	P[120](+:255,+:255,+:255),
	P[121](-:55,-:100,-:100),
	P[122](-:100,-:100,-:100),
	P[123](-:100,-:100,-:100);
A[under_streak, 17] <=
	P[118](+:91,+:50,+:86),
	P[119](+:255,+:255,+:255),
	P[120](-:55,-:100,-:100),
	P[121](-:100,-:100,-:100),
	P[122](-:100,-:100,-:100);
A[under_streak, 18] <=
	P[117](+:91,+:50,+:86),
	P[118](+:255,+:255,+:255),
	P[119](-:55,-:100,-:100),
	P[120](-:100,-:100,-:100),
	P[121](-:100,-:100,-:100);
A[under_streak, 19] <=
	P[116](+:91,+:50,+:86),
	P[117](+:255,+:255,+:255),
	P[118](-:55,-:100,-:100),
	P[119](-:100,-:100,-:100),
	P[120](-:100,-:100,-:100);
A[under_streak, 20] <=
	P[115](+:91,+:50,+:86),
	P[116](+:255,+:255,+:255),
	P[117](-:55,-:100,-:100),
	P[118](-:100,-:100,-:100),
	P[119](-:100,-:100,-:100);
A[under_streak, 21] <=
	P[114](+:91,+:50,+:86),
	P[115](+:255,+:255,+:255),
	P[116](-:55,-:100,-:100),
	P[117](-:100,-:100,-:100),
	P[118](-:100,-:100,-:100);
A[under_streak, 22] <=
	P[113](+:91,+:50,+:86),
	P[114](+:255,+:255,+:255),
	P[115](-:55,-:100,-:100),
	P[116](-:100,-:100,-:100),
	P[117](-:100,-:100,-:100);
A[under_streak, 23] <=
	P[112](+:91,+:50,+:86),
	P[113](+:255,+:255,+:255),
	P[114](-:55,-:100,-:100),
	P[115](-:100,-:100,-:100),
	P[116](-:100,-:100,-:100);
A[under_streak, 24] <=
	P[111](+:91,+:50,+:86),
	P[112](+:255,+:255,+:255),
	P[113](-:55,-:100,-:100),
	P[114](-:100,-:100,-:100),
	P[115](-:100,-:100,-:100);
A[under_streak, 25] <=
	P[110](+:91,+:50,+:86),
	P[111](+:255,+:255,+:255),
	P[112](-:55,-:100,-:100),
	P[113](-:100,-:100,-:100),
	P[114](-:100,-:100,-:100);
A[under_streak, 26] <=
	P[109](+:91,+:50,+:86),
	P[110](+:255,+:255,+:255),
	P[111](-:55,-:100,-:100),
	P[112](-:100,-:100,-:100),
	P[113](-:100,-:100,-:100);
A[under_streak, 27] <=
	P[108](+:91,+:50,+:86),
	P[109](+:255,+:255,+:255),
	P[110](-:55,-:100,-:100),
	P[111](-:100,-:100,-:100),
	P[112](-:100,-:100,-:100);
A[under_streak, 28] <=
	P[107](+:91,+:50,+:86),
	P[108](+:255,+:255,+:255),
	P[109](-:55,-:100,-:100),
	P[110](-:100,-:100,-:100),
	P[111](-:100,-:100,-:100);
A[under_streak, 29] <=
	P[106](+:91,+:50,+:86),
	P[107](+:255,+:255,+:255),
	P[108](-:55,-:100,-:100),
	P[109](-:100,-:100,-:100),
	P[110](-:100,-:100,-:100);
A[under_streak, 30] <=
	P[105](+:91,+:50,+:86),
	P[106](+:255,+:255,+:255),
	P[107](-:55,-:100,-:100),
	P[108](-:100,-:100,-:100),
	P[109](-:100,-:100,-:100);
A[under_streak, 31] <=
	P[104](+:91,+:50,+:86),
	P[105](+:255,+:255,+:255),
	P[106](-:55,-:100,-:100),
	P[107](-:100,-:100,-:100),
	P[108](-:100,-:100,-:100);
A[under_streak, 32] <=
	P[103](+:91,+:50,+:86),
	P[104](+:255,+:255,+:255),
	P[105](-:55,-:100,-:100),
	P[106](-:100,-:100,-:100),
	P[107](-:100,-:100,-:100);
# Fade-out
A[under_streak, 33] <=
	P[103](+:255,+:255,+:255),
	P[104](-:55,-:100,-:100),
	P[105](-:100,-:100,-:100),
	P[106](-:200,-:200,-:200);
A[under_streak, 33] <=
	P[103](-:55,-:100,-:100),
	P[104](-:100,-:100,-:100),
	P[105](-:200,-:200,-:200);
A[under_streak, 34] <=
	P[103](-:100,-:100,-:100),
	P[104](-:200,-:200,-:200);
A[under_streak, 35] <=
	P[103](-:200,-:200,-:200);
A[under_streak, 36] <=
	P[106](0,0,0);

# Rainbow wave
A[rainbow_wave] <= framedelay:0x3, loop, replace:all, pfunc:interp;
A[rainbow_wave, 1]  <=                       P[c:0%] (255,0,0),   P[c:25%](255,255,0), P[c:50%](0,255,0),   P[c:75%](0,0,255), P[c:100%](127,0,255);
A[rainbow_wave, 2]  <= P[c:-24%](127,0,255),   P[c:2%] (255,0,0),   P[c:27%](255,255,0), P[c:52%](0,255,0),   P[c:77%](0,0,255), P[c:102%](127,0,255);
A[rainbow_wave, 3]  <= P[c:-22%](127,0,255),   P[c:4%] (255,0,0),   P[c:29%](255,255,0), P[c:54%](0,255,0),   P[c:79%](0,0,255), P[c:104%](127,0,255);
A[rainbow_wave, 4]  <= P[c:-20%](127,0,255),   P[c:6%] (255,0,0),   P[c:31%](255,255,0), P[c:56%](0,255,0),   P[c:81%](0,0,255), P[c:106%](127,0,255);
A[rainbow_wave, 5]  <= P[c:-18%](127,0,255),   P[c:8%] (255,0,0),   P[c:33%](255,255,0), P[c:58%](0,255,0),   P[c:83%](0,0,255), P[c:108%](127,0,255);
A[rainbow_wave, 6]  <= P[c:-16%](127,0,255),   P[c:10%](255,0,0),   P[c:35%](255,255,0), P[c:60%](0,255,0),   P[c:85%](0,0,255), P[c:110%](127,0,255);
A[rainbow_wave, 7]  <= P[c:-14%](127,0,255),   P[c:12%](255,0,0),   P[c:37%](255,255,0), P[c:62%](0,255,0),   P[c:87%](0,0,255), P[c:112%](127,0,255);
A[rainbow_wave, 8]  <= P[c:-12%](127,0,255),   P[c:14%](255,0,0),   P[c:39%](255,255,0), P[c:64%](0,255,0),   P[c:89%](0,0,255), P[c:114%](127,0,255);
A[rainbow_wave, 9]  <= P[c:-10%](127,0,255),   P[c:16%](255,0,0),   P[c:41%](255,255,0), P[c:66%](0,255,0),   P[c:91%](0,0,255), P[c:116%](127,0,255);
A[rainbow_wave, 10] <= P[c:-8%] (127,0,255),   P[c:18%](255,0,0),   P[c:43%](255,255,0), P[c:68%](0,255,0),   P[c:93%](0,0,255), P[c:118%](127,0,255);
A[rainbow_wave, 11] <= P[c:-6%] (127,0,255),   P[c:20%](255,0,0),   P[c:45%](255,255,0), P[c:70%](0,255,0),   P[c:95%](0,0,255), P[c:120%](127,0,255);
A[rainbow_wave, 12] <= P[c:-4%] (127,0,255),   P[c:22%](255,0,0),   P[c:47%](255,255,0), P[c:72%](0,255,0),   P[c:97%](0,0,255), P[c:122%](127,0,255);
A[rainbow_wave, 13] <= P[c:-2%] (127,0,255),   P[c:24%](255,0,0),   P[c:49%](255,255,0), P[c:74%](0,255,0),   P[c:99%](0,0,255), P[c:124%](127,0,255);
A[rainbow_wave, 14] <=                       P[c:0%] (127,0,255),   P[c:25%](255,0,0),   P[c:50%](255,255,0), P[c:75%](0,255,0),   P[c:100%](0,0,255);
A[rainbow_wave, 15] <= P[c:-24%](0,0,255), P[c:2%] (127,0,255),   P[c:27%](255,0,0),   P[c:52%](255,255,0), P[c:77%](0,255,0),   P[c:102%](0,0,255);
A[rainbow_wave, 16] <= P[c:-22%](0,0,255), P[c:4%] (127,0,255),   P[c:29%](255,0,0),   P[c:54%](255,255,0), P[c:79%](0,255,0),   P[c:104%](0,0,255);
A[rainbow_wave, 17] <= P[c:-20%](0,0,255), P[c:6%] (127,0,255),   P[c:31%](255,0,0),   P[c:56%](255,255,0), P[c:81%](0,255,0),   P[c:106%](0,0,255);
A[rainbow_wave, 18] <= P[c:-18%](0,0,255), P[c:8%] (127,0,255),   P[c:33%](255,0,0),   P[c:58%](255,255,0), P[c:83%](0,255,0),   P[c:108%](0,0,255);
A[rainbow_wave, 19] <= P[c:-16%](0,0,255), P[c:10%](127,0,255),   P[c:35%](255,0,0),   P[c:60%](255,255,0), P[c:85%](0,255,0),   P[c:110%](0,0,255);
A[rainbow_wave, 20] <= P[c:-14%](0,0,255), P[c:12%](127,0,255),   P[c:37%](255,0,0),   P[c:62%](255,255,0), P[c:87%](0,255,0),   P[c:112%](0,0,255);
A[rainbow_wave, 21] <= P[c:-12%](0,0,255), P[c:14%](127,0,255),   P[c:39%](255,0,0),   P[c:64%](255,255,0), P[c:89%](0,255,0),   P[c:114%](0,0,255);
A[rainbow_wave, 22] <= P[c:-10%](0,0,255), P[c:16%](127,0,255),   P[c:41%](255,0,0),   P[c:66%](255,255,0), P[c:91%](0,255,0),   P[c:116%](0,0,255);
A[rainbow_wave, 23] <= P[c:-8%] (0,0,255), P[c:18%](127,0,255),   P[c:43%](255,0,0),   P[c:68%](255,255,0), P[c:93%](0,255,0),   P[c:118%](0,0,255);
A[rainbow_wave, 24] <= P[c:-6%] (0,0,255), P[c:20%](127,0,255),   P[c:45%](255,0,0),   P[c:70%](255,255,0), P[c:95%](0,255,0),   P[c:120%](0,0,255);
A[rainbow_wave, 25] <= P[c:-4%] (0,0,255), P[c:22%](127,0,255),   P[c:47%](255,0,0),   P[c:72%](255,255,0), P[c:97%](0,255,0),   P[c:122%](0,0,255);
A[rainbow_wave, 26] <= P[c:-2%] (0,0,255), P[c:24%](127,0,255),   P[c:49%](255,0,0),   P[c:74%](255,255,0), P[c:99%](0,255,0),   P[c:124%](0,0,255);
A[rainbow_wave, 28] <=                       P[c:0%] (0,0,255), P[c:25%](127,0,255),   P[c:50%](255,0,0),   P[c:75%](255,255,0), P[c:100%](0,255,0);
A[rainbow_wave, 29] <= P[c:-24%](0,255,0),   P[c:2%] (0,0,255), P[c:27%](127,0,255),   P[c:52%](255,0,0),   P[c:77%](255,255,0), P[c:102%](0,255,0);
A[rainbow_wave, 30] <= P[c:-22%](0,255,0),   P[c:4%] (0,0,255), P[c:29%](127,0,255),   P[c:54%](255,0,0),   P[c:79%](255,255,0), P[c:104%](0,255,0);
A[rainbow_wave, 31] <= P[c:-20%](0,255,0),   P[c:6%] (0,0,255), P[c:31%](127,0,255),   P[c:56%](255,0,0),   P[c:81%](255,255,0), P[c:106%](0,255,0);
A[rainbow_wave, 32] <= P[c:-18%](0,255,0),   P[c:8%] (0,0,255), P[c:33%](127,0,255),   P[c:58%](255,0,0),   P[c:83%](255,255,0), P[c:108%](0,255,0);
A[rainbow_wave, 33] <= P[c:-16%](0,255,0),   P[c:10%](0,0,255), P[c:35%](127,0,255),   P[c:60%](255,0,0),   P[c:85%](255,255,0), P[c:110%](0,255,0);
A[rainbow_wave, 34] <= P[c:-14%](0,255,0),   P[c:12%](0,0,255), P[c:37%](127,0,255),   P[c:62%](255,0,0),   P[c:87%](255,255,0), P[c:112%](0,255,0);
A[rainbow_wave, 35] <= P[c:-12%](0,255,0),   P[c:14%](0,0,255), P[c:39%](127,0,255),   P[c:64%](255,0,0),   P[c:89%](255,255,0), P[c:114%](0,255,0);
A[rainbow_wave, 36] <= P[c:-10%](0,255,0),   P[c:16%](0,0,255), P[c:41%](127,0,255),   P[c:66%](255,0,0),   P[c:91%](255,255,0), P[c:116%](0,255,0);
A[rainbow_wave, 37] <= P[c:-8%] (0,255,0),   P[c:18%](0,0,255), P[c:43%](127,0,255),   P[c:68%](255,0,0),   P[c:93%](255,255,0), P[c:118%](0,255,0);
A[rainbow_wave, 38] <= P[c:-6%] (0,255,0),   P[c:20%](0,0,255), P[c:45%](127,0,255),   P[c:70%](255,0,0),   P[c:95%](255,255,0), P[c:120%](0,255,0);
A[rainbow_wave, 39] <= P[c:-4%] (0,255,0),   P[c:22%](0,0,255), P[c:47%](127,0,255),   P[c:72%](255,0,0),   P[c:97%](255,255,0), P[c:122%](0,255,0);
A[rainbow_wave, 40] <= P[c:-2%] (0,255,0),   P[c:24%](0,0,255), P[c:49%](127,0,255),   P[c:74%](255,0,0),   P[c:99%](255,255,0), P[c:124%](0,255,0);
A[rainbow_wave, 41] <=                       P[c:0%] (0,255,0),   P[c:25%](0,0,255), P[c:50%](127,0,255),   P[c:75%](255,0,0),   P[c:100%](255,255,0);
A[rainbow_wave, 42] <= P[c:-24%](255,255,0), P[c:2%] (0,255,0),   P[c:27%](0,0,255), P[c:52%](127,0,255),   P[c:77%](255,0,0),   P[c:102%](255,255,0);
A[rainbow_wave, 43] <= P[c:-22%](255,255,0), P[c:4%] (0,255,0),   P[c:29%](0,0,255), P[c:54%](127,0,255),   P[c:79%](255,0,0),   P[c:104%](255,255,0);
A[rainbow_wave, 44] <= P[c:-20%](255,255,0), P[c:6%] (0,255,0),   P[c:31%](0,0,255), P[c:56%](127,0,255),   P[c:81%](255,0,0),   P[c:106%](255,255,0);
A[rainbow_wave, 45] <= P[c:-18%](255,255,0), P[c:8%] (0,255,0),   P[c:33%](0,0,255), P[c:58%](127,0,255),   P[c:83%](255,0,0),   P[c:108%](255,255,0);
A[rainbow_wave, 46] <= P[c:-16%](255,255,0), P[c:10%](0,255,0),   P[c:35%](0,0,255), P[c:60%](127,0,255),   P[c:85%](255,0,0),   P[c:110%](255,255,0);
A[rainbow_wave, 47] <= P[c:-14%](255,255,0), P[c:12%](0,255,0),   P[c:37%](0,0,255), P[c:62%](127,0,255),   P[c:87%](255,0,0),   P[c:112%](255,255,0);
A[rainbow_wave, 48] <= P[c:-12%](255,255,0), P[c:14%](0,255,0),   P[c:39%](0,0,255), P[c:64%](127,0,255),   P[c:89%](255,0,0),   P[c:114%](255,255,0);
A[rainbow_wave, 49] <= P[c:-10%](255,255,0), P[c:16%](0,255,0),   P[c:41%](0,0,255), P[c:66%](127,0,255),   P[c:91%](255,0,0),   P[c:116%](255,255,0);
A[rainbow_wave, 50] <= P[c:-8%] (255,255,0), P[c:18%](0,255,0),   P[c:43%](0,0,255), P[c:68%](127,0,255),   P[c:93%](255,0,0),   P[c:118%](255,255,0);
A[rainbow_wave, 51] <= P[c:-6%] (255,255,0), P[c:20%](0,255,0),   P[c:45%](0,0,255), P[c:70%](127,0,255),   P[c:95%](255,0,0),   P[c:120%](255,255,0);
A[rainbow_wave, 52] <= P[c:-4%] (255,255,0), P[c:22%](0,255,0),   P[c:47%](0,0,255), P[c:72%](127,0,255),   P[c:97%](255,0,0),   P[c:122%](255,255,0);
A[rainbow_wave, 53] <= P[c:-2%] (255,255,0), P[c:24%](0,255,0),   P[c:49%](0,0,255), P[c:74%](127,0,255),   P[c:99%](255,0,0),   P[c:124%](255,255,0);
A[rainbow_wave, 54] <=                       P[c:0%] (255,255,0), P[c:25%](0,255,0),   P[c:50%](0,0,255), P[c:75%](127,0,255),   P[c:100%](255,0,0);
A[rainbow_wave, 55] <= P[c:-24%](255,0,0),   P[c:2%] (255,255,0), P[c:27%](0,255,0),   P[c:52%](0,0,255), P[c:77%](127,0,255),   P[c:102%](255,0,0);
A[rainbow_wave, 56] <= P[c:-22%](255,0,0),   P[c:4%] (255,255,0), P[c:29%](0,255,0),   P[c:54%](0,0,255), P[c:79%](127,0,255),   P[c:104%](255,0,0);
A[rainbow_wave, 57] <= P[c:-20%](255,0,0),   P[c:6%] (255,255,0), P[c:31%](0,255,0),   P[c:56%](0,0,255), P[c:81%](127,0,255),   P[c:106%](255,0,0);
A[rainbow_wave, 58] <= P[c:-18%](255,0,0),   P[c:8%] (255,255,0), P[c:33%](0,255,0),   P[c:58%](0,0,255), P[c:83%](127,0,255),   P[c:108%](255,0,0);
A[rainbow_wave, 59] <= P[c:-16%](255,0,0),   P[c:10%](255,255,0), P[c:35%](0,255,0),   P[c:60%](0,0,255), P[c:85%](127,0,255),   P[c:110%](255,0,0);
A[rainbow_wave, 60] <= P[c:-14%](255,0,0),   P[c:12%](255,255,0), P[c:37%](0,255,0),   P[c:62%](0,0,255), P[c:87%](127,0,255),   P[c:112%](255,0,0);
A[rainbow_wave, 61] <= P[c:-12%](255,0,0),   P[c:14%](255,255,0), P[c:39%](0,255,0),   P[c:64%](0,0,255), P[c:89%](127,0,255),   P[c:114%](255,0,0);
A[rainbow_wave, 62] <= P[c:-10%](255,0,0),   P[c:16%](255,255,0), P[c:41%](0,255,0),   P[c:66%](0,0,255), P[c:91%](127,0,255),   P[c:116%](255,0,0);
A[rainbow_wave, 63] <= P[c:-8%] (255,0,0),   P[c:18%](255,255,0), P[c:43%](0,255,0),   P[c:68%](0,0,255), P[c:93%](127,0,255),   P[c:118%](255,0,0);
A[rainbow_wave, 64] <= P[c:-6%] (255,0,0),   P[c:20%](255,255,0), P[c:45%](0,255,0),   P[c:70%](0,0,255), P[c:95%](127,0,255),   P[c:120%](255,0,0);
A[rainbow_wave, 65] <= P[c:-4%] (255,0,0),   P[c:22%](255,255,0), P[c:47%](0,255,0),   P[c:72%](0,0,255), P[c:97%](127,0,255),   P[c:122%](255,0,0);
A[rainbow_wave, 66] <= P[c:-2%] (255,0,0),   P[c:24%](255,255,0), P[c:49%](0,255,0),   P[c:74%](0,0,255), P[c:99%](127,0,255),   P[c:124%](255,0,0);

# Start/stop wave
U["Print"] :+ A[rainbow_wave](start);
U["Pause"] :+ A[rainbow_wave](start, loops:1, framedelay:0);

# Full-brightness white
A[all_white] <= pfunc:interp;
A[all_white, 1] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
#U["Space"] :+ animation_control(0);
#U["Right"] :+ animation_control(1);

# Massdrop blue to pink (miami)
A[blue_to_pink] <= pfunc:interp;
A[blue_to_pink, 1] <= P[c:0%](0,0xAE,0xDA), P[c:100%](0xFF,0x14,0x93); # FF1493

# Color wheel
A[color_wheel] <= pfunc:interp;
A[color_wheel, 1] <= P[c:0%](0,0xAE,0xDA), P[c:100%](0xFF,0xDA,0xE9);

# Keys only color rotation
A[keys_only_rotation] <= framedelay:0xF, loop, replace:all, pfunc:interp;
A[keys_only_rotation, 1]  <= S0x01(0xC1, 0x2D, 0x1D), S0x5F(0xC1, 0x2D, 0x1D);
A[keys_only_rotation, 2]  <= S0x01(0xEE, 0x6D, 0x28), S0x5F(0xEE, 0x6D, 0x28);
A[keys_only_rotation, 3]  <= S0x01(0xE0, 0x9E, 0x3B), S0x5F(0xE0, 0x9E, 0x3B);
A[keys_only_rotation, 4]  <= S0x01(0xE5, 0xC9, 0x43), S0x5F(0xE5, 0xC9, 0x43);
A[keys_only_rotation, 5]  <= S0x01(0x1E, 0xB8, 0x6D), S0x5F(0x1E, 0xB8, 0x6D);
A[keys_only_rotation, 6]  <= S0x01(0x00, 0xB3, 0xA6), S0x5F(0x00, 0xB3, 0xA6);
A[keys_only_rotation, 7]  <= S0x01(0x20, 0x82, 0xC6), S0x5F(0x20, 0x82, 0xC6);
A[keys_only_rotation, 8]  <= S0x01(0x43, 0x54, 0xC1), S0x5F(0x43, 0x54, 0xC1);
A[keys_only_rotation, 9]  <= S0x01(0x71, 0x1C, 0x9E), S0x5F(0x71, 0x1C, 0x9E);
A[keys_only_rotation, 10] <= S0x01(0xCD, 0x3B, 0x70), S0x5F(0xCD, 0x3B, 0x70);
A[keys_only_rotation, 11] <= S0x01(0xB8, 0x34, 0x3E), S0x5F(0xB8, 0x34, 0x3E);

# Underlighting only color rotation
A[underlighting_only_rotation] <= framedelay:0xF, loop, replace:all, pfunc:interp;
A[underlighting_only_rotation, 1]  <= P[88](0xC1, 0x2D, 0x1D), P[128](0xC1, 0x2D, 0x1D);
A[underlighting_only_rotation, 2]  <= P[88](0xEE, 0x6D, 0x28), P[128](0xEE, 0x6D, 0x28);
A[underlighting_only_rotation, 3]  <= P[88](0xE0, 0x9E, 0x3B), P[128](0xE0, 0x9E, 0x3B);
A[underlighting_only_rotation, 4]  <= P[88](0xE5, 0xC9, 0x43), P[128](0xE5, 0xC9, 0x43);
A[underlighting_only_rotation, 5]  <= P[88](0x1E, 0xB8, 0x6D), P[128](0x1E, 0xB8, 0x6D);
A[underlighting_only_rotation, 6]  <= P[88](0x00, 0xB3, 0xA6), P[128](0x00, 0xB3, 0xA6);
A[underlighting_only_rotation, 7]  <= P[88](0x20, 0x82, 0xC6), P[128](0x20, 0x82, 0xC6);
A[underlighting_only_rotation, 8]  <= P[88](0x43, 0x54, 0xC1), P[128](0x43, 0x54, 0xC1);
A[underlighting_only_rotation, 9]  <= P[88](0x71, 0x1C, 0x9E), P[128](0x71, 0x1C, 0x9E);
A[underlighting_only_rotation, 10] <= P[88](0xCD, 0x3B, 0x70), P[128](0xCD, 0x3B, 0x70);
A[underlighting_only_rotation, 11] <= P[88](0xB8, 0x34, 0x3E), P[128](0xB8, 0x34, 0x3E);

U"F1" +: A[keys_only_rotation](start, framedelay:0x1F);
U"F2" +: A[keys_only_rotation](start);
U"F3" +: A[keys_only_rotation](start, framedelay:1);
U"F4" +: A[keys_only_rotation](pause);

U"F5" +: A[underlighting_only_rotation](start, framedelay:0x1F);
U"F6" +: A[underlighting_only_rotation](start);
U"F7" +: A[underlighting_only_rotation](start, framedelay:1);
U"F8" +: A[underlighting_only_rotation](pause);

U"Esc" + U"F1" : flashMode();

